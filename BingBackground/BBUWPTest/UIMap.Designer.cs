// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BBUWPTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlText uITheimagehasalreadybeText = this.UIBingBackgroundUWPWindow.UITheimagehasalreadybeText;
            #endregion

            // Verify that the 'ControlType' property of 'The image has already been there!' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITheimagehasalreadybeTextControlType, uITheimagehasalreadybeText.ControlType.ToString(), "Text value is unexpected");
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIBingBackgroundUWPWindow UIBingBackgroundUWPWindow
        {
            get
            {
                if ((this.mUIBingBackgroundUWPWindow == null))
                {
                    this.mUIBingBackgroundUWPWindow = new UIBingBackgroundUWPWindow();
                }
                return this.mUIBingBackgroundUWPWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIBingBackgroundUWPWindow mUIBingBackgroundUWPWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'The image has already been there!' label equals 'Text'
        /// </summary>
        public string UITheimagehasalreadybeTextControlType = "Text";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIBingBackgroundUWPWindow : XamlWindow
    {
        
        public UIBingBackgroundUWPWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "BingBackgroundUWP";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("BingBackgroundUWP");
            #endregion
        }
        
        #region Properties
        public XamlButton UISetFolderButton
        {
            get
            {
                if ((this.mUISetFolderButton == null))
                {
                    this.mUISetFolderButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISetFolderButton.SearchProperties[XamlButton.PropertyNames.Name] = "Set Folder";
                    this.mUISetFolderButton.WindowTitles.Add("BingBackgroundUWP");
                    #endregion
                }
                return this.mUISetFolderButton;
            }
        }
        
        public XamlButton UIDownloadButton
        {
            get
            {
                if ((this.mUIDownloadButton == null))
                {
                    this.mUIDownloadButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIDownloadButton.SearchProperties[XamlButton.PropertyNames.Name] = "Download";
                    this.mUIDownloadButton.WindowTitles.Add("BingBackgroundUWP");
                    #endregion
                }
                return this.mUIDownloadButton;
            }
        }
        
        public XamlButton UIFolderButton
        {
            get
            {
                if ((this.mUIFolderButton == null))
                {
                    this.mUIFolderButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIFolderButton.SearchProperties[XamlButton.PropertyNames.Name] = "Folder";
                    this.mUIFolderButton.WindowTitles.Add("BingBackgroundUWP");
                    #endregion
                }
                return this.mUIFolderButton;
            }
        }
        
        public XamlText UITheimagehasalreadybeText
        {
            get
            {
                if ((this.mUITheimagehasalreadybeText == null))
                {
                    this.mUITheimagehasalreadybeText = new XamlText(this);
                    #region Search Criteria
                    this.mUITheimagehasalreadybeText.SearchProperties[XamlText.PropertyNames.AutomationId] = "Hint";
                    this.mUITheimagehasalreadybeText.WindowTitles.Add("BingBackgroundUWP");
                    #endregion
                }
                return this.mUITheimagehasalreadybeText;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUISetFolderButton;
        
        private XamlButton mUIDownloadButton;
        
        private XamlButton mUIFolderButton;
        
        private XamlText mUITheimagehasalreadybeText;
        #endregion
    }
}
